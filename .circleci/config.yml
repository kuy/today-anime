version: 2
jobs:
  build:
    working_directory: ~/app
    docker:
      - image: ocaml/opam2:ubuntu-lts
    environment:
      TERM: dumb
    steps:
      - checkout
      - run:
          name: 'Determine deps'
          command: |
            opam switch 4.07 && eval $(opam env)
            echo 'dune async_ssl atdgen calendar cohttp-async core ppx_let yojson' > ./_deps
            cat ./_deps
      - restore_cache:
          key: deps-cache-{{ checksum "_deps" }}
      - run:
          name: 'Prepare deps'
          command: |
            sudo apt install -y m4 pkg-config libssl-dev libffi-dev
            opam switch 4.07 && eval $(opam env)
            opam update
            opam install -y $(cat ./_deps)
      - save_cache:
          key: deps-cache-{{ checksum "_deps" }}
          paths:
            - '~/.opam'
      - run:
          name: 'Build'
          command: |
            opam switch 4.07 && eval $(opam env)
            dune build cli/main.exe
      - persist_to_workspace:
          root: .
          paths:
            - .
  deploy:
    working_directory: ~/app
    docker:
      - image: ocaml/opam2:ubuntu-lts
    environment:
      TERM: dumb
    steps:
      - attach_workspace:
          at: .
      - add_ssh_keys:
          fingerprints:
            - e7:2c:fd:1a:b2:e5:22:ca:7e:10:b1:aa:83:41:e3:72
      - run:
          name: 'SSH setup'
          command: ssh-keyscan 155.138.217.181 >> ~/.ssh/known_hosts
      - run:
          name: 'Deploy'
          command: |
            scp _build/default/cli/main.exe circleci@155.138.217.181:~/today-anime

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: deploy/production